# .github/workflows/deploy.yml

name: Empacotar Aplicação para Raspberry Pi

on:
  push:
    branches:
      - main  # ou master, conforme seu branch principal

jobs:
  build-and-package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - name: 1. Clonar o repositório
        uses: actions/checkout@v3

      - name: 2. Configurar Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: 3. Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: 4. Criar diretório para o modelo
        run: mkdir -p assets/models

      - name: 5. Baixar o modelo de detecção YOLOv5
        run: |
          echo "Baixando o modelo YOLOv5..."
          wget -q --show-progress https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov5nu.pt -O assets/models/yolov5nu.pt
          echo "Download concluído."

      - name: 6. Criar script de inicialização (start.sh)
        run: |
          echo "Criando script start.sh..."
          cat << 'EOF' > start.sh
          #!/bin/bash
          echo "--- Configurando Ambiente Virtual ---"

          if ! command -v python3 &> /dev/null
          then
              echo "ERRO: Python 3 não encontrado. Por favor, instale-o."
              exit 1
          fi

          python3 -m venv venv
          source venv/bin/activate

          echo "--- Instalando Dependências ---"
          pip install --upgrade pip
          pip install -r requirements.txt

          echo "--- Executando a Aplicação ---"
          python3 -m src.light_embedded.main

          deactivate
          EOF
          chmod +x start.sh

      - name: 7. Empacotar a aplicação em um arquivo ZIP
        run: |
          echo "Criando o pacote sala-automatica-v1.0.zip..."
          zip -r sala-automatica-v1.0.zip src assets requirements.txt start.sh LICENSE README.md

      - name: 8. Fazer upload do pacote como artefato
        uses: actions/upload-artifact@v3
        with:
          name: pacote-sala-automatica
          path: sala-automatica-v1.0.zip
